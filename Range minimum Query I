/*
		@Author :- Gaurav Bharti
		National Institute of Technology, Jamshedpur.
*/
 
#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define empb emplace_back
#define mp make_pair
#define F first
#define S second
#define endl "\n"
#define vii vector<int>
#define vll vector<ll>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define vpll vector<pll>
#define vpii vector<pii>
#define mapii map<int,int> 
#define mapll map<ll,ll>
#define all(a) a.begin(),a.end()
#define test ll t; cin>>t; while(t--)
#define prec(n) fixed<<setprecision(n)
#define jaldibazi ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define mod 1000000007
 
struct segtree{
		
	int size;
 
	vii values;
 
	void init(int n){
		size=1;
		while(size<n) size*=2;
		values.assign(2*size,0LL);
	}
 
	void build(vii &a,int x,int lx, int rx){
		if(rx-lx==1){
			if(lx<(int)a.size()){
				values[x]=a[lx];
			}
			return;
		}
		int m=(lx+rx)>>1;
		build(a,2*x+1,lx,m);
		build(a,2*x+2,m,rx);
		values[x]=min(values[2*x+1],values[2*x+2]);
	}
 
	void build(vii &a){
		build(a,0,0,size);
	}
  
	ll calc(int l,int r,int x,int lx,int rx){
		if(lx>=r || l>=rx) return INT_MAX;
		if(lx>=l && rx<=r) return values[x];
 
		int m=(lx+rx)>>1;
		int s1=calc(l,r,2*x+1,lx,m);
		int s2=calc(l,r,2*x+2,m,rx);
		return min(s1,s2);
	}
 
	ll calc(int l,int r){
		return calc(l,r,0,0,size);
	}
};
 
int main(){
	jaldibazi;
 
	int n,m;cin>>n>>m;
 
	segtree st;
	st.init(n);
	vii a(n);
	for(int i=0;i<n;++i){
		cin>>a[i];
	}
 
	st.build(a);
	while(m--){
		int l,r;cin>>l>>r;
		cout<<st.calc(--l,r)<<endl;
	}
}
